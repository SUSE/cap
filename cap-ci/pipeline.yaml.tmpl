{{- $config := tmpl.Exec "config" | data.YAML -}}
groups:
{{- range $backend, $enabled := $config.backends }}{{ if $enabled }}
- name: {{ $backend }}
  jobs:
    {{- range $job, $enabled :=  $config.jobs }}{{ if $enabled }}
    {{- range $scheduler, $enabled := $config.schedulers }}{{ if $enabled }}
    {{- range $avail, $enabled := $config.availabilities }}{{ if $enabled }}
    - {{ $job }}-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    {{- end }}{{ end }}
    {{- end }}{{ end }}
    {{- end }}{{ end }}
{{ end }}{{ end }}

- name: ALL
  jobs:
    {{- range $backend, $enabled := $config.backends }}{{ if $enabled }}
    {{- range $job, $enabled :=  $config.jobs }}{{ if $enabled }}
    {{- range $scheduler, $enabled := $config.schedulers }}{{ if $enabled }}
    {{- range $avail, $enabled := $config.availabilities }}{{ if $enabled }}
    - {{ $job }}-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    {{- end }}{{ end }}
    {{- end }}{{ end }}
    {{- end }}{{ end }}
    {{- end }}{{ end }}

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

- name: github-status
  type: docker-image
  source:
    repository: resource/github-status
    tag: release

- name: helm-chart
  type: docker-image
  source:
    repository: linkyard/helm-chart-resource

resources:
- name: catapult
  type: git
  source:
    branch: {{ $config.catapult.branch }}
    uri: {{ $config.catapult.uri }}

- name: s3.kubecf-bundle
  type: s3
  source:
    bucket: kubecf
    access_key_id: ((aws-access-key))
    secret_access_key: ((aws-secret-key))
    region_name: us-west-2
    regexp: kubecf-bundle-v(.*).tgz

- name: helm-chart.stratos-chart
  type: helm-chart
  source:
    chart: stratos/console
    repos:
    - name: stratos
      url: http://opensource.suse.com/stratos/

- name: helm-chart.stratos-metrics-chart
  type: helm-chart
  source:
    chart: stratos-metrics/metrics
    repos:
    - name: stratos-metrics
      url: http://opensource.suse.com/stratos-metrics/

# Pool resource with kube cluster information
{{- range $backend, $enabled := $config.backends }}{{ if $enabled }}
- name: {{ $backend }}-pool.kube-hosts
  type: pool
  source:
    uri: git@github.com:SUSE/cf-ci-pools.git
    private_key: ((github-private-key))
    branch: {{ $backend }}-kube-hosts
    pool: {{ $backend }}-kube-hosts
{{- end }}{{ end }}

{{ $pipelineName := .Env.PIPELINE }}

{{- $allbells := `
        # enable as much options as possible
        HA: true
        AUTOSCALER: true
` }}

jobs:
{{- range $backend, $enabled :=  $config.backends }}{{ if $enabled }}
{{- range $avail, $enabled := $config.availabilities }}{{ if $enabled }}
{{- range $scheduler, $enabled := $config.schedulers }}{{ if $enabled }}

# {{ $backend }}-{{ $avail }}

{{ if index $config.jobs "deploy" }}
- name: deploy-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  public: false
  plan:
  - get: s3.kubecf-bundle
    trigger: true
  - get: helm-chart.stratos-chart
    trigger: true
  - get: helm-chart.stratos-metrics-chart
    trigger: true
  - get: catapult
  - put: {{ $backend }}-pool.kube-hosts
    params: {acquire: true}
    timeout: 2m
  - task: deploy
    privileged: true
    timeout: 2h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: s3.kubecf-bundle
      - name: pool.kube-hosts
      params:
        BRAIN_VERBOSE: {{ $config.brain.verbose }}
        BRAIN_INORDER: {{ $config.brain.inorder }}
        BRAIN_INCLUDE: "{{ $config.brain.include }}"
        BRAIN_EXCLUDE: "{{ $config.brain.exclude }}"
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_deploy"| indent 12}}
{{ end }}

{{ if index $config.jobs "smoke-tests" }}
- name: smoke-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: catapult
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    - deploy-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: test-{{ $scheduler }}
    privileged: true
    timeout: 1h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
        TEST_SUITE: smokes
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_test" | indent 12 }}
{{ end }}

{{ if index $config.jobs "cf-acceptance-tests" }}
- name: cf-acceptance-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: catapult
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    - smoke-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: test-{{ $scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
        TEST_SUITE: cats
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_test" | indent 12 }}
{{ end }}

{{ if index $config.jobs "sync-integration-tests" }}
- name: sync-integration-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: catapult
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    - cf-acceptance-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: test-{{ $scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
        TEST_SUITE: sits
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_test" | indent 12 }}
{{ end }}

{{ if index $config.jobs "cf-acceptance-tests-brain" }}
- name: cf-acceptance-tests-brain-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: catapult
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    - sync-integration-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: test-{{ $scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
        TEST_SUITE: brain
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_test" | indent 12 }}
{{ end }}

{{ if index $config.jobs "upgrade" }}
- name: upgrade-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: s3.kubecf-bundle
    trigger: false
  - get: catapult
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    - cf-acceptance-tests-brain-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: upgrade-{{ $scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: s3.kubecf-bundle
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
        BACKEND: {{ $backend }}
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_obtain_upgrade" | indent 12 }}
{{ end }}

{{ if index $config.jobs "stratos" }}
- name: stratos-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: catapult
  - get: helm-chart.stratos-chart
  - get: helm-chart.stratos-metrics-chart
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    - upgrade-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: stratos-{{ $scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: helm-chart.stratos-chart
      - name: helm-chart.stratos-metrics-chart
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq $scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $avail "ha" }}
        HA: true
{{- end }}
{{- if eq $avail "all" }}
{{- print $allbells }}
{{- end }}
        TEST_SUITE: cats
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_stratos" | indent 12 }}
{{ end }}

{{ if index $config.jobs "destroy-kubecf" }}
- name: destroy-kubecf-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
  serial_groups: [{{ $scheduler }}-{{ $backend }}-{{ $avail }}]
  public: false
  plan:
  - get: catapult
  - get: {{ $backend }}-pool.kube-hosts
    passed:
    #TODO: change this to stratos
    - smoke-tests-{{ $scheduler }}-{{ $backend }}-{{ $avail }}
    trigger: true
  - task: dstroy-kubecf-{{ $scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ $backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" $backend ) | indent 12}}
            {{- tmpl.Exec "scripts_destroy_kubecf" | indent 12 }}
  - put: {{ $backend }}-pool.kube-hosts
    params: {release: {{ $backend }}-pool.kube-hosts}
{{ end }}

{{- end }}{{ end }} # end eirini
{{- end }}{{ end }} # end availabilities
{{- end }}{{ end }} # end backend
