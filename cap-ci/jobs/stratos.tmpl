{{ define "jobs_stratos" }}
- name: stratos-{{ .scheduler }}-{{ .backend }}-{{ .avail }}
  serial_groups: [{{ .scheduler }}-{{ .backend }}-{{ .avail }}]
  public: false
  plan:
  - get: catapult
  - get: helm-chart.stratos-chart
  - get: helm-chart.stratos-metrics-chart
  - get: {{ .backend }}-pool.kube-hosts
{{- if ne .position 0 }}
    passed:
    - {{ index .jobs_enabled (sub .position 1) }}-{{ .scheduler }}-{{ .backend }}-{{ .avail }}
{{ end }}
    trigger: true
  - task: stratos-{{ .scheduler }}
    privileged: true
    timeout: 5h30m
    input_mapping:
      pool.kube-hosts: {{ .backend }}-pool.kube-hosts
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: helm-chart.stratos-chart
      - name: helm-chart.stratos-metrics-chart
      - name: pool.kube-hosts
      params:
        QUIET_OUTPUT: true
        DOWNLOAD_CATAPULT_DEPS: false
        DEFAULT_STACK: cflinuxfs3
{{- if eq .scheduler "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq .avail "ha" }}
        HA: true
{{- end }}
{{- if eq .avail "all" }}
{{- print .allbells }}
{{- end }}
        TEST_SUITE: cats
      run:
        path: "/bin/bash"
        args:
          - -c
          - |
            {{- tmpl.Exec "scripts_obtain_kubeconfig" | indent 12 }}
            {{- tmpl.Exec ( print "scripts_import_" .backend ) | indent 12}}
            {{- tmpl.Exec "scripts_stratos" | indent 12 }}
{{ end }}
