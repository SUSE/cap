---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

- name: github-status
  type: docker-image
  source:
    repository: resource/github-status
    tag: release

resources:
- name: kubecf-master
  type: git
  source:
    branch: master
    uri: https://github.com/SUSE/kubecf

- name: catapult
  type: git
  source:
    branch: post-publish-example
    uri: https://github.com/SUSE/catapult

- name: s3.kubecf-bundle
  type: s3
  source:
    bucket: kubecf
    access_key_id: ((aws-access-key))
    secret_access_key: ((aws-secret-key))
    region_name: us-west-2
    regexp: kubecf-bundle-v(.*).tgz

{{ $pipelineName := .Env.PIPELINE }}

{{ $obtain_ekcp := `
            # obtain kubeconfig from ekcp
            pushd catapult
            BACKEND=ekcp make recover
            cp build$CLUSTER_NAME/kubeconfig kubeconfig_$CLUSTER_NAME
` }}

{{ $import_gke := `
            # create builfolder prepared for gke
            export BACKEND=gke
            cat '(( gke-key-json ))' > $PWD/gke-key.json
            export GKE_CRED_JSON=$PWD/gke-key.json
            export KUBECFG=$PWD/kubeconfig_$CLUSTER_NAME
            make kubeconfig
` }}

{{ $import_eks := `
            # create builfolder prepared for eks
            export BACKEND=eks
            export AWS_ACCESS_KEY_ID='(( aws-ci-chuller-access-key-id ))'
            export AWS_SECRET_ACCESS_KEY='(( aws-ci-chuller-secret-access-key ))'
            export KUBECFG=$PWD/kubeconfig_$CLUSTER_NAME
            make kubeconfig
` }}

{{ $import_aks := `
            # create builfolder prepared for aks
            export BACKEND=aks
            export KUBECFG=$PWD/kubeconfig_$CLUSTER_NAME
            make kubeconfig
` }}

{{ $import_caasp4 := `
            # create builfolder prepared for caasp4os
            export BACKEND=caasp4os
            export KUBECFG=$PWD/kubeconfig_$CLUSTER_NAME
            make kubeconfig
` }}

{{ $deploy := `
            # deploy kubecf from chart
            export SCF_LOCAL=$PWD/kubecf
            export SCF_CHART="$(readlink -f ../s3.kubecf-bundle/*.tgz)"
            export SCF_OPERATOR=true
            export DOCKER_ORG=cap-staging
            export QUIET_OUTPUT=true
            make scf
` }}

{{ $test := `
            # run test suites on cluster
            # See: https://github.com/SUSE/catapult/wiki/Running-SCF-tests#kubecf
            export KUBECF_TEST_SUITE="${TEST_SUITE:-smokes}"
            export KUBECF_NAMESPACE="scf"
            export KUBECF_CHECKOUT="$PWD/kubecf"
            export SCF_TESTGROUP=true
            export QUIET_OUTPUT=true
            make tests-kubecf
` }}

{{ $stratos := `
            # deploy stratos console & metrics
            export QUIET_OUTPUT=true
            make stratos metrics
` }}

{{ $upgrade := `
            # upgrade kubecf
            export SCF_CHART="$(readlink -f ../s3.kubecf-bundle/*.tgz)"
            export SCF_OPERATOR=true
            export QUIET_OUTPUT=true
            make scf-chart # this takes the same chart as the deploy step for now
            make scf-gen-config
            make scf-upgrade
` }}

{{ $allbells := `
            # enable as much options as possible
            export HA=true
            export EMBEDDED_UAA=true
            export AUTOSCALER=true
` }}

jobs:
{{ range $i, $Backend := (ds "BACKEND").backend -}} # for all backends

{{ range $j, $HAFlag := (ds "HA").ha -}} # for ha

{{ range $j, $EiriniFlag := (ds "EIRINI").eirini -}} # for eirini

# {{$Backend}}-{{$HAFlag}}

- name: deploy-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
  public: false
  plan:
  - get: s3.kubecf-bundle
    trigger: true
  - get: kubecf-master
  - get: catapult
  - task: deploy
    privileged: true
    timeout: 2h30m
    input_mapping:
      kubecf: kubecf-master
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: kubecf
      - name: catapult
      - name: s3.kubecf-bundle
      outputs:
      - name: output
      params:
        QUIET_OUTPUT: true
        DEFAULT_STACK: cflinuxfs3
        EKCP_HOST: ((ekcp-host))
{{- if eq $EiriniFlag "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $HAFlag "ha" }}
        HA: true
{{- end }}
        CLUSTER_NAME: {{$pipelineName}}-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
      run:
        path: "/bin/bash"
        args:
          - -xce
          - |
            {{- print $obtain_ekcp -}}
            {{- if eq $Backend "caasp4" -}}
            {{- print $import_caasp4 -}}
            {{end}}
            {{- if eq $Backend "eks" -}}
            {{- print $import_eks -}}
            {{end}}
            {{- if eq $Backend "gke" -}}
            {{- print $import_gke -}}
            {{end}}
            {{- if eq $Backend "aks" -}}
            {{- print $import_aks -}}
            {{end}}
            {{- print $deploy }}

- name: smoke-tests-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
  serial_groups: [{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}]
  public: false
  plan:
  - get: kubecf-master
    passed:
    - deploy-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
    trigger: true
  - get: catapult
  - task: test-{{$EiriniFlag}}
    privileged: true
    timeout: 1h30m
    input_mapping:
      kubecf: kubecf-master
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: kubecf
      outputs:
      - name: output
      params:
        QUIET_OUTPUT: true
        DEFAULT_STACK: cflinuxfs3
        EKCP_HOST: ((ekcp-host))
{{- if eq $EiriniFlag "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $HAFlag "ha" }}
        HA: true
{{- end }}
        TEST_SUITE: smokes
        CLUSTER_NAME: {{$pipelineName}}-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
      run:
        path: "/bin/bash"
        args:
          - -xce
          - |
            {{- print $obtain_ekcp -}}
            {{- if eq $Backend "caasp4" -}}
            {{- print $import_caasp4 -}}
            {{end}}
            {{- if eq $Backend "eks" -}}
            {{- print $import_eks -}}
            {{end}}
            {{- if eq $Backend "gke" -}}
            {{- print $import_gke -}}
            {{end}}
            {{- if eq $Backend "aks" -}}
            {{- print $import_aks -}}
            {{end}}
            {{- print $test }}

- name: cf-acceptance-tests-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
  serial_groups: [{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}]
  public: false
  plan:
  - get: kubecf-master
    passed:
    - smoke-tests-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
    trigger: true
  - get: catapult
  - task: test-{{$EiriniFlag}}
    privileged: true
    timeout: 5h30m
    input_mapping:
      kubecf: kubecf-master
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: kubecf
      outputs:
      - name: output
      params:
        QUIET_OUTPUT: true
        DEFAULT_STACK: cflinuxfs3
        EKCP_HOST: ((ekcp-host))
{{- if eq $EiriniFlag "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $HAFlag "ha" }}
        HA: true
{{- end }}
        TEST_SUITE: cats
        CLUSTER_NAME: {{$pipelineName}}-diego-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
      run:
        path: "/bin/bash"
        args:
          - -xce
          - |
            {{- print $obtain_ekcp -}}
            {{- if eq $Backend "caasp4" -}}
            {{- print $import_caasp4 -}}
            {{end}}
            {{- if eq $Backend "eks" -}}
            {{- print $import_eks -}}
            {{end}}
            {{- if eq $Backend "gke" -}}
            {{- print $import_gke -}}
            {{end}}
            {{- if eq $Backend "aks" -}}
            {{- print $import_aks -}}
            {{end}}
            {{- print $test }}

- name: upgrade-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
  serial_groups: [{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}]
  public: false
  plan:
  - get: kubecf-master
    passed:
    - cf-acceptance-tests-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
    trigger: true
  - get: catapult
  - task: upgrade-{{$EiriniFlag}}
    privileged: true
    timeout: 5h30m
    input_mapping:
      kubecf: kubecf-master
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: kubecf
      outputs:
      - name: output
      params:
        QUIET_OUTPUT: true
        DEFAULT_STACK: cflinuxfs3
        EKCP_HOST: ((ekcp-host))
{{- if eq $EiriniFlag "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $HAFlag "ha" }}
        HA: true
{{- end }}
        TEST_SUITE: cats
        TEST_SUITE: cats
        BACKEND: {{$Backend}}
        CLUSTER_NAME: {{$pipelineName}}-diego-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
      run:
        path: "/bin/bash"
        args:
          - -xce
          - |
            {{- print $obtain_ekcp -}}
            {{- if eq $Backend "caasp4" -}}
            {{- print $import_caasp4 -}}
            {{end}}
            {{- if eq $Backend "eks" -}}
            {{- print $import_eks -}}
            {{end}}
            {{- if eq $Backend "gke" -}}
            {{- print $import_gke -}}
            {{end}}
            {{- if eq $Backend "aks" -}}
            {{- print $import_aks -}}
            {{end}}
            {{- print $upgrade }}

- name: stratos-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
  serial_groups: [{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}]
  public: false
  plan:
  - get: kubecf-master
    passed:
    - upgrade-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
    trigger: true
  - get: catapult
  - task: stratos-{{$EiriniFlag}}
    privileged: true
    timeout: 5h30m
    input_mapping:
      kubecf: kubecf-master
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: splatform/catapult
      inputs:
      - name: catapult
      - name: kubecf
      outputs:
      - name: output
      params:
        QUIET_OUTPUT: true
        DEFAULT_STACK: cflinuxfs3
        EKCP_HOST: ((ekcp-host))
{{- if eq $EiriniFlag "eirini" }}
        ENABLE_EIRINI: true
{{ else }}
        ENABLE_EIRINI: false
{{- end }}
{{- if eq $HAFlag "ha" }}
        HA: true
{{- end }}
        TEST_SUITE: cats
        CLUSTER_NAME: {{$pipelineName}}-{{$EiriniFlag}}-{{$Backend}}-{{$HAFlag}}
      run:
        path: "/bin/bash"
        args:
          - -xce
          - |
            {{- print $obtain_ekcp -}}
            {{- if eq $Backend "caasp4" -}}
            {{- print $import_caasp4 -}}
            {{end}}
            {{- if eq $Backend "eks" -}}
            {{- print $import_eks -}}
            {{end}}
            {{- if eq $Backend "gke" -}}
            {{- print $import_gke -}}
            {{end}}
            {{- if eq $Backend "aks" -}}
            {{- print $import_aks -}}
            {{end}}
            {{- print $stratos }}

{{ end }} # end eirini
{{ end }} # end ha
{{ end }} # end backend
